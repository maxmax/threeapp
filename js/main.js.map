{"version":3,"sources":["webpack:///./src/containers/layoutButtons/styles.scss","webpack:///./src/containers/loader/styles.scss","webpack:///./src/containers/textures/assets/demon/head-demon-1500px.jpg","webpack:///./src/containers/textures/assets/demon/chain-demon-700px.jpg","webpack:///./src/containers/videoFrame/styles.scss","webpack:///./src/containers/layoutButtons/music.png","webpack:///./src/containers/layoutButtons/shop.png","webpack:///./src/containers/layoutButtons/tour.png","webpack:///./src/containers/layoutButtons/video.png","webpack:///./src/containers/layoutButtons/anarchy.gif","webpack:///./src/containers/layoutButtons/Lil-Tracy-logo.png","webpack:///./src/containers/textures/assets/demon/horns-700px.jpg","webpack:///./src/containers/textures/assets/vampire/chain-vampire-700px.jpg","webpack:///./src/containers/textures/assets/vampire/fangs-vampire-1000px.jpg","webpack:///./src/containers/textures/assets/vampire/head-vampire-1500px.jpg","webpack:///./src/containers/textures/assets/hat/chain-hat-700px.jpg","webpack:///./src/containers/textures/assets/hat/hat-1000px.jpg","webpack:///./src/containers/textures/assets/hat/head-hat-1500px.jpg","webpack:///./src/containers/textures/assets/green-glasses/chain_03-700px.jpg","webpack:///./src/containers/textures/assets/green-glasses/towel-1000px.jpg","webpack:///./src/containers/textures/assets/green-glasses/head_new-1500px.jpg","webpack:///./src/containers/textures/assets/green-glasses/black.jpg","webpack:///./src/containers/baseObj/styles.scss","webpack:///./src/containers/layoutButtons/index.js","webpack:///./src/containers/loader/index.js","webpack:///./src/containers/baseObj/textureLoadingManager.js","webpack:///./src/containers/textures/index.js","webpack:///./src/containers/baseObj/namespace.js","webpack:///./src/containers/baseObj/loaderModels.js","webpack:///./src/containers/baseObj/panoramaSphereGeometry.js","webpack:///./src/containers/baseObj/index.js","webpack:///./src/containers/baseObj/controlsSettings.js","webpack:///./src/containers/baseObj/staticSettings.js","webpack:///./src/containers/videoFrame/index.js","webpack:///./src/index.js"],"names":["module","exports","root","document","querySelector","actionsWrapper","actionTopLeftBtn","btn","createElement","id","classList","add","styles","topLeftBtn","btnImg","src","tour","appendChild","actionTopRightBtn","topRightBtn","shop","actionBottomLeftBtn","bottomLeftBtn","music","actionBottomRightBtn","bottomRightBtn","video","body","actionAnarchyBtn","actionAnarchyBtnContainer","fire","logoBtn","actionLogoBtnContainer","logo","actionCenterBtn","actionCenterBtnContainer","initLoadingManager","loading","manager","LoadingManager","getElementById","screenLoading","onStart","url","itemsLoaded","itemsTotal","active","onLoad","setTimeout","remove","textureLoader","TextureLoader","textureFbxLoadingManager","newTexture","model","load","texture","traverse","child","Mesh","material","map","flatShading","needsUpdate","changeModelTexture","scene","name","Model","getObjectByName","parent","headTexture","headTextureImg","demonHeadTexture","chainTextureDemon","chainTextureDemonImg","hornsTexture","hornsTextureDemonImg","fangsTextureVampire","hatTextureHatImg","headTextureHatImg","towelTextureGreenImg","chainTextureHatImg","chainTextureVampireImg","chainTextureGreenImg","glassesTextureImg","fangsTextureVampireImg","headTextureVampireImg","headTextureGreenImg","namespace","assetsPath","process","loader","FBXLoader","crossOrigin","visibledModels","option","children","item","i","type","visible","mainModel","hornModel","chainModel","towelModel","hatModel","fangsModel","glassesModel","addModelMainDemon","panoramaSphereGeometry","geometryTexture","MeshPhongMaterial","specular","side","BackSide","geometry","SphereGeometry","sphere","rotation","y","x","innerWidth","window","innerHeight","anarchyBtn","renderer","WebGLRenderer","antialias","alpha","setSize","domElement","camera","PerspectiveCamera","position","z","Scene","sceneType","anarchyBtnCount","actionCount","dataView","addEventListener","aspect","updateProjectionMatrix","AmbientLight","controls","OrbitControls","backDefaultScene","autoRotate","autoRotateSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","enablePan","update","controlsSettings","Interaction","updateMatrix","addModelMain","modelPositionY","addModelChain","addModelHorns","addModelFangs","e","location","container","loop","autoplay","videoFrame","render","requestAnimationFrame","baseObj"],"mappings":"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","file":"js/main.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"btn___24-jh\",\"topLeftBtn\":\"topLeftBtn___2ieeA\",\"topRightBtn\":\"topRightBtn___1XcHn\",\"bottomLeftBtn\":\"bottomLeftBtn___2C6fq\",\"bottomRightBtn\":\"bottomRightBtn___3sRCP\",\"actionAnarchyBtnContainer\":\"actionAnarchyBtnContainer___QT3d2\",\"actionCenterBtnContainer\":\"actionCenterBtnContainer___1Mf9x\",\"actionLogoBtnContainer\":\"actionLogoBtnContainer___eh6z5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenLoading\":\"screenLoading___2OPBm\",\"active\":\"active___2DCDR\",\"dots\":\"dots___sNrLw\"};","module.exports = __webpack_public_path__ + \"js/images/9186fb2121de435594b7793143ad0517.jpg\";","module.exports = __webpack_public_path__ + \"js/images/4dd1cd00054c6f73b913cb1f62a342e9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root___2oJhO\",\"video\":\"video___zj0yo\"};","module.exports = __webpack_public_path__ + \"js/images/799d4350bac35f9b945a0596aba1af94.png\";","module.exports = __webpack_public_path__ + \"js/images/db25dd5d99869be90f43ee658e5773f0.png\";","module.exports = __webpack_public_path__ + \"js/images/8fae51acc0be8a5042c74e13c73c80ea.png\";","module.exports = __webpack_public_path__ + \"js/images/541fdce53556c40916c51f75f7db3c36.png\";","module.exports = __webpack_public_path__ + \"js/images/440026709eaae88d7a3e9239d5c1d9da.gif\";","module.exports = __webpack_public_path__ + \"js/images/e1657e6efce97c8afb7cb6264ffabf9c.png\";","module.exports = __webpack_public_path__ + \"js/images/69c5e1c84277e10b58024afac063ade6.jpg\";","module.exports = __webpack_public_path__ + \"js/images/8a2cfb90acacb6782bd86e0a400bc323.jpg\";","module.exports = __webpack_public_path__ + \"js/images/c2be9f26c000e3c7b8dc400588f06787.jpg\";","module.exports = __webpack_public_path__ + \"js/images/366ded8101d09e62628a5f5aee7e3485.jpg\";","module.exports = __webpack_public_path__ + \"js/images/dcbef8668fac0418a56b98802952bff4.jpg\";","module.exports = __webpack_public_path__ + \"js/images/53ee5eccecf171032e81507f23b511b7.jpg\";","module.exports = __webpack_public_path__ + \"js/images/1356e31b6ce0984d9ddceb3f10e305c9.jpg\";","module.exports = __webpack_public_path__ + \"js/images/3de230e738a0911700c0c870d35b455f.jpg\";","module.exports = __webpack_public_path__ + \"js/images/a92d7344a9ef739b0d5112e0093f7c71.jpg\";","module.exports = __webpack_public_path__ + \"js/images/cb6ae3ba97eef5aeb78c9a5b202a2c5a.jpg\";","module.exports = __webpack_public_path__ + \"js/images/b450e1df0c059a6eec47eb448c8d0e64.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root___11HWz\",\"canvasBtn\":\"canvasBtn___1U9Vx\",\"headerHidden\":\"headerHidden___JC4pe\"};","// Actions / BTN's\nimport styles from './styles.scss';\nimport music from './music.png';\nimport shop from './shop.png';\nimport tour from './tour.png';\nimport video from './video.png';\nimport fire from './anarchy.gif';\nimport logo from './Lil-Tracy-logo.png';\n\nconst root = document.querySelector('#app');\n\nexport const actionsWrapper = {\n  actionTopLeftBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionTopLeftBtnContainer\";\n    btn.classList.add(styles.btn, styles.topLeftBtn);\n    // const btnContent = document.createTextNode(\"Tour\");\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = tour;\n    btn.appendChild(btnImg);\n    root.appendChild(btn);\n    return btn;\n  },\n  actionTopRightBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionTopRightBtnContainer\";\n    btn.classList.add(styles.btn, styles.topRightBtn);\n    // const btnContent = document.createTextNode(\"Shop\");\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = shop;\n    btn.appendChild(btnImg);\n    root.appendChild(btn);\n    return btn;\n  },\n  actionBottomLeftBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionBottomLeftBtnContainer\";\n    btn.classList.add(styles.btn, styles.bottomLeftBtn);\n    // const btnContent = document.createTextNode(\"Music\");\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = music;\n    btn.appendChild(btnImg);\n    root.appendChild(btn);\n    return btn;\n  },\n  actionBottomRightBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionBottomRightBtnContainer\";\n    btn.classList.add(styles.btn, styles.bottomRightBtn);\n    // const btnContent = document.createTextNode(\"Video\");\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = video;\n    btn.appendChild(btnImg);\n    document.body.appendChild(btn);\n    return btn;\n  },\n  actionAnarchyBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionAnarchyBtnContainer\";\n    btn.classList.add(styles.btn, styles.actionAnarchyBtnContainer);\n    // const btnContent = document.createTextNode(\"Anarchy\");\n    // btn.appendChild(btnContent);\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = fire;\n    btn.appendChild(btnImg);\n    root.appendChild(btn);\n    return btn;\n  },\n  logoBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionLogoBtnContainer\";\n    btn.classList.add(styles.actionLogoBtnContainer);\n    // const btnContent = document.createTextNode(\"Anarchy\");\n    // btn.appendChild(btnContent);\n    const btnImg = document.createElement(\"img\");\n    btnImg.src = logo;\n    btn.appendChild(btnImg);\n    root.appendChild(btn);\n    return btn;\n  },\n  actionCenterBtn() {\n    const btn = document.createElement(\"div\");\n    btn.id = \"actionCenterBtnContainer\";\n    btn.classList.add(styles.btn, styles.actionCenterBtnContainer);\n    // const btnContent = document.createTextNode(\"Center\");\n    // btn.appendChild(btnContent);\n    root.appendChild(btn);\n    return btn;\n  }\n}\n\n//export const actionsWrapper = () => {\n// }\n","import { LoadingManager } from 'three';\nimport styles from './styles.scss';\n\nexport const initLoadingManager = (loading) => {\n  const manager = new LoadingManager();\n  // const root = document.body;\n  const root = document.getElementById('loader');\n\n  root.classList.add(styles.screenLoading);\n\n  manager.onStart = (url, itemsLoaded, itemsTotal) => {\n    // console.log( 'Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' );\n    root.classList.add(styles.active);\n  }\n\n  // manager.onProgress = function( item, loaded, total ) {\n    // console.log( 'onProgress________D__', item );\n    // root.classList.add(styles.screenLoading);\n  // };\n\n  manager.onLoad = function () {\n    setTimeout( function() {\n        root.classList.remove(styles.active);\n        // controls.update();\n    }, 1600 );\n  }\n\n  return manager;\n};\n","// textureFbxLoadingManager\nimport {\n  Mesh,\n  TextureLoader\n} from 'three';\n\n// import { initLoadingManager } from '../loader';\n// sceneLoadingIndicato\nimport { sceneLoadingIndicator, initLoadingManager } from '../loader';\n\n// TextureLoader global fn\nconst manager = initLoadingManager();\nconst textureLoader = new TextureLoader( manager );\n\nexport const textureFbxLoadingManager = (newTexture, model) => {\n  // sceneLoadingIndicator(true);\n  textureLoader.load(newTexture, function (texture) {\n    model.traverse(function (child) {\n      if (child instanceof Mesh) {\n        child.material.map = texture;\n        // child.material.lightMap = texture;\n        child.material.flatShading = true;\n        child.material.needsUpdate = true;\n      }\n    });\n  });\n  // sceneLoadingIndicator(false);\n}\n\n// Texture Sample Loading\nexport const textureSampleLoadingManager = (texture) => {\n  return textureLoader.load(texture);\n}\n\n// Change Texture\nexport const changeModelTexture = (scene, name, texture) => {\n  const Model = scene.getObjectByName(name);\n  // sceneLoadingIndicator(true);\n  if (Model) {\n    const parentModel = Model.parent;\n    textureFbxLoadingManager(texture, Model);\n    // sceneLoadingIndicator(false);\n    // parentModel.remove( Model );\n  }\n}\n","// All Textures\n\n// headTexture\nimport headTextureImg from './assets/demon/head-demon-1500px.jpg';\nimport chainTextureDemonImg from './assets/demon/chain-demon-700px.jpg';\nimport hornsTextureDemonImg from './assets/demon/horns-700px.jpg';\n\nimport chainTextureVampireImg from './assets/vampire/chain-vampire-700px.jpg';\nimport fangsTextureVampireImg from './assets/vampire/fangs-vampire-1000px.jpg';\nimport headTextureVampireImg from './assets/vampire/head-vampire-1500px.jpg';\n\nimport chainTextureHatImg from './assets/hat/chain-hat-700px.jpg';\nimport hatTextureHatImg from './assets/hat/hat-1000px.jpg';\nimport headTextureHatImg from './assets/hat/head-hat-1500px.jpg';\n\nimport chainTextureGreenImg from './assets/green-glasses/chain_03-700px.jpg';\nimport towelTextureGreenImg from './assets/green-glasses/towel-1000px.jpg';\nimport headTextureGreenImg from './assets/green-glasses/head_new-1500px.jpg';\nimport glassesTextureImg from './assets/green-glasses/black.jpg';\n\nconst assetsPath = process.env.ASSETS_PATCH;\n\n// Scene Background texture\n// export const textureBackgroundScene = assetsPath + \"misty_pines.jpg\";\n// supernova_VT_Void-CC.jpg\nexport const textureBackgroundScene = assetsPath + \"hdri-huge.jpg\";\n// textureBackgroundSceneAlt\nexport const textureBackgroundSceneAlt = assetsPath + \"anarchy/anarchy_bg.jpg\";\n\n// Model Texture\n// export const headTexture = assetsPath + \"09_FACE_DIFFUSE_color_resized.jpeg\";\n// export const headTexture = assetsPath + \"demon/head-demon.jpg\";\nexport const headTexture = headTextureImg;\n// export const demonHeadTexture = assetsPath + \"demon/head-demon.jpg\";\n// export const demonHeadTexture = assetsPath + \"demon/head-demon-1500px.jpg\";\nexport const demonHeadTexture = headTextureImg;\n\n\nexport const headTextureAlt = assetsPath + \"09_FACE_DIFFUSE_color_resized_new.jpg\";\n// export const chainTexture  = assetsPath + \"chain_02.jpg\";\n// export const chainTexture = assetsPath + \"chain_03.jpg\";\nexport const chainTexture = chainTextureDemonImg;\n\n// export const chainTextureDemon  = assetsPath + \"demon/chain-demon.jpg\";\n// export const chainTextureDemon  = assetsPath + \"demon/chain-demon-700px.jpg\";\nexport const chainTextureDemon = chainTextureDemonImg;\n\n// export const hornsTexture  = assetsPath + \"demon/horns.jpg\";\n// export const hornsTexture  = assetsPath + \"demon/horns-700px.jpg\";\nexport const hornsTexture = hornsTextureDemonImg;\n\n// export const hatTexture  = assetsPath + \"hat/hat.jpg\";\nexport const hatTexture = hatTextureHatImg;\n\n// export const hatTextureHead = assetsPath + \"hat/head-hat.jpg\";\nexport const hatTextureHead = headTextureHatImg;\n\n// export const glassesTextureTowel  = assetsPath + \"green-glasses/towel.jpg\";\nexport const glassesTextureTowel  = towelTextureGreenImg;\n\n// export const chainTextureHat  = assetsPath + \"hat/chain-hat.jpg\";\nexport const chainTextureHat  = chainTextureHatImg;\n\n// export const chainTextureVampire  = assetsPath + \"vampire/chain-vampire.jpg\";\n// export const chainTextureVampire  = assetsPath + \"vampire/chain-vampire-700px.jpg\";\nexport const chainTextureVampire  = chainTextureVampireImg;\n\n// export const chainTextureGreen  = assetsPath + \"green-glasses/chain_03.jpg\";\nexport const chainTextureGreen  = chainTextureGreenImg;\n\nexport const chainTextureAnarchy  = assetsPath + \"anarchy/anarchy_chain.jpg\";\n\n// export const glassesTexture  = assetsPath + \"green-glasses/glasses.jpg\";\n// export const glassesTexture  = assetsPath + \"green-glasses/glasses.jpg\";\nexport const glassesTexture  = glassesTextureImg;\n\n// export const fangsTextureVampire  = assetsPath + \"vampire/fangs-vampire.jpg\";\n// export const fangsTextureVampire  = assetsPath + \"vampire/fangs-vampire-1000px.jpg\";\nexport const fangsTextureVampire  = fangsTextureVampireImg;\n\n// export const headTextureVampire = assetsPath + \"vampire/head-vampire.jpg\";\n// export const headTextureVampire = assetsPath + \"vampire/head-vampire-1500px.jpg\";\nexport const headTextureVampire = headTextureVampireImg;\n\n// export const headTextureGreen = assetsPath + \"green-glasses/head_new.jpg\";\nexport const headTextureGreen = headTextureGreenImg;\n\nexport const headTextureAnarchy = assetsPath + \"anarchy/anarchy_head.jpg\";\n\n// export const videoAnarchyFrame = assetsPath + \"anarchy/anarchy_animation.mp4\";\nexport const videoAnarchyFrame = assetsPath + \"anarchy/bunny-full.mp4\";\n","export const namespace = {\n  main: 'Main',\n  mainAction: 'mainAction',\n  horn: 'Horns',\n  towel: 'Towel',\n  glasses: 'Glasses',\n  chain: 'Chain_1',\n  hat: 'Hat',\n  fangs: 'Fangs'\n}\n","// Loaders Model\nimport * as FBXLoader from 'three-fbxloader-offical';\nimport { textureFbxLoadingManager, changeModelTexture } from './textureLoadingManager';\nimport { modelPositionY } from './staticSettings';\nimport {\n  textureBackgroundScene,\n  headTexture,\n  headTextureAlt,\n  headTextureGreenHair,\n  headTextureBlueHair,\n  headTextureVampire,\n  headTextureRedHair,\n  chainTexture,\n  chainTextureVampire,\n  hornsTexture,\n  fangsTextureVampire,\n  headTextureGreen,\n  hatTexture,\n  hatTextureHead,\n  chainTextureHat,\n  demonHeadTexture,\n  chainTextureDemon,\n  chainTextureGreen,\n  glassesTexture,\n  headTextureAnarchy,\n  chainTextureAnarchy,\n  glassesTextureTowel\n} from '../textures';\nimport { namespace } from './namespace';\nimport { removeModel } from './removeModel'\nimport { initLoadingManager } from '../loader';\n\nconst assetsPath = process.env.ASSETS_PATCH;\nconst manager = initLoadingManager();\nconst loader = new FBXLoader( manager );\nloader.crossOrigin = 'use-credentials';\n// loader.setCrossOrigin('anonymous');\n// allow cross origin loading\n// loader.crossOrigin = '';\n\nconst currentLoaded = (scene, name) => scene.getObjectByName(name) ? false : true;\n\n// Horns\nexport const addModelHorns = (scene) => {\n  // const loaded = scene.getObjectByName(namespace.horn) ? false : true;\n  // loader.crossOrigin = 'use-credentials';\n  loader.load(assetsPath + \"demon/horns.fbx\", model => {\n    model.name = 'Horns';\n    model.visible = false;\n    // hornsTexture\n    textureFbxLoadingManager(hornsTexture, model);\n    scene.add(model);\n    model.position.y = modelPositionY; // x,y,z\n    // model.rotation.x = -0.1;\n    model.updateMatrix();\n    // async function asyncCall() {\n    //  const result = await scene.getObjectByName(namespace.horn);\n    //  console.log(result);\n    //  result.visible = true;\n    // }\n    // asyncCall();\n  });\n}\n\n// Glasses\nexport const addModelGlasses = (scene) => {\n  loader.load(assetsPath + \"green-glasses/glasses.fbx\", model => {\n    model.name = 'Glasses';\n    model.visible = false;\n    textureFbxLoadingManager(glassesTexture, model);\n    scene.add(model);\n    model.position.y = modelPositionY - 0.01 ; // x,y,z\n    model.rotation.x = 0;\n    // model.rotation.z = 0.1;\n    model.updateMatrix();\n  });\n}\n\n// Towel\n\nexport const addModelTowel = (scene) => {\n  loader.load(assetsPath + \"green-glasses/towel.fbx\", model => {\n    model.name = 'Towel';\n    model.visible = false;\n    textureFbxLoadingManager(glassesTextureTowel, model);\n    scene.add(model);\n    model.position.y = modelPositionY; // x,y,z\n    // model.rotation.x = -0.1;\n    model.updateMatrix();\n  });\n}\n\n// Chain + chainTexture\nexport const addModelChain = (scene) => {\n  loader.load(assetsPath + \"default/chain.fbx\", model => { // loader.load(assetsPath + \"chain_03.fbx\", model => {\n    model.name = 'Chain_1';\n    model.visible = false;\n    textureFbxLoadingManager(demonHeadTexture, model);\n    scene.add(model);\n    model.position.y = modelPositionY -  0.1; // x,y,z\n    // model.rotation.x = -0.1;\n    model.updateMatrix();\n  });\n}\n\n// Hat\nexport const addModelHat = (scene) => {\n  loader.load(assetsPath + \"hat/hat.fbx\", model => {\n    textureFbxLoadingManager(hatTexture, model);\n    model.name = 'Hat';\n    model.visible = false;\n    scene.add(model);\n    model.position.y = modelPositionY; // x,y,z\n    // model.rotation.x = -0.1;\n    model.updateMatrix();\n  });\n}\n\n// Fangs\nexport const addModelFangs = (scene) => {\n  loader.load(assetsPath + \"vampire/fangs.fbx\", model => {\n    model.name = 'Fangs';\n    model.visible = false;\n    textureFbxLoadingManager(fangsTextureVampire, model);\n    scene.add(model);\n    model.position.y = modelPositionY; // x,y,z\n    // model.rotation.x = -0.1;\n    model.updateMatrix();\n  });\n}\n\n// Head - Main model\nexport const addModelMain = (scene) => {\n  loader.crossOrigin = 'use-credentials';\n  loader.load(assetsPath + \"default/head.fbx\", model => {\n    model.name = 'Main';\n    model.visible = false;\n    // model.renderOrder: 0\n    textureFbxLoadingManager(headTexture, model);\n\n    scene.add(model);\n    model.position.y = modelPositionY;\n    model.updateMatrix();\n    // async function asyncCall() {\n    //  const result = await scene.getObjectByName(namespace.main);\n    //  result.visible = true;\n    // }\n    // asyncCall();\n  });\n}\n\nconst visibledModels = ({scene, option}) => {\n\n  scene.children.map((item, i) => {\n    if (item.type === 'Group') {\n      item.visible = false;\n    }\n  });\n\n  setTimeout( function() {\n    scene.children.map((item, i) => {\n      // item.visible = false;\n      if (item.name === namespace.main) {\n        // scene.children[i].visible = true;\n        item.visible = option.mainModel || false;\n      } else if (item.name === namespace.horn) {\n        item.visible = option.hornModel || false;\n      } else if (item.name === namespace.chain) {\n        item.visible = option.chainModel || false;\n      } else if (item.name === namespace.towel) {\n        item.visible = option.towelModel || false;\n      } else if (item.name === namespace.hat) {\n        item.visible = option.hatModel || false;\n      } else if (item.name === namespace.fangs) {\n        item.visible = option.fangsModel || false;\n      } else if (item.name === namespace.glasses) {\n        item.visible = option.glassesModel || false;\n      }\n    });\n  }, 1600 );\n}\n\nexport const addModelMainDemon = (scene) => {\n  // removeModel(scene, namespace.fangs);\n  // addModelChain(scene);\n  changeModelTexture(scene, namespace.chain, chainTextureDemon);\n  changeModelTexture(scene, namespace.main, demonHeadTexture);\n  // const MainModel = scene.getObjectByName(namespace.main);\n\n  visibledModels({\n    scene,\n    option: {\n      hornModel: true,\n      chainModel: true,\n      mainModel: true,\n      fangsModel: true\n    }\n  })\n\n}\n\nexport const addModelMainVampire = (scene) => {\n  // visibleModels(scene, []);\n  changeModelTexture(scene, namespace.chain, chainTextureVampire);\n  changeModelTexture(scene, namespace.main, headTextureVampire);\n\n  visibledModels({\n    scene,\n    option: {\n      chainModel: true,\n      mainModel: true,\n      fangsModel: true\n    }\n  })\n}\n\nexport const addModelMainGreen = (scene) => {\n  // changeModelTexture(scene, namespace.chain, chainTextureGreen);\n  changeModelTexture(scene, namespace.main, headTextureGreen);\n\n  visibledModels({\n    scene,\n    option: {\n      towelModel: true,\n      mainModel: true,\n      glassesModel: true\n    }\n  })\n}\n\nexport const addModelMainHat = (scene) => {\n  changeModelTexture(scene, namespace.chain, chainTextureHat);\n  changeModelTexture(scene, namespace.main, hatTextureHead);\n\n  visibledModels({\n    scene,\n    option: {\n      hatModel: true,\n      chainModel: true,\n      mainModel: true,\n    }\n  })\n}\n\nexport const addModelMainAnarchy = (scene) => {\n  changeModelTexture(scene, namespace.chain, chainTextureAnarchy);\n  changeModelTexture(scene, namespace.main, headTextureAnarchy);\n\n  visibledModels({\n    scene,\n    option: {\n      chainModel: true,\n      mainModel: true,\n    }\n  })\n}\n","// textureFbxLoadingManager\nimport {\n  MeshPhongMaterial,\n  SphereGeometry,\n  BackSide,\n  Mesh,\n} from 'three';\n\nimport { textureSampleLoadingManager } from './textureLoadingManager';\n\nimport { textureBackgroundScene } from '../textures';\n\nexport const panoramaSphereGeometry = (scene) => {\n\n  const geometryTexture = textureSampleLoadingManager(textureBackgroundScene);\n\n  var material = new MeshPhongMaterial({\n    // color: \"#ffffff\",\n    // shininess: 10,\n    map: geometryTexture,\n    specular: \"#000000\",\n    side: BackSide,\n    name: 'panoramaSphereGeometryMaterial'\n  });\n\n  // Add the sphere container.\n  // var geometry = new SphereGeometry( 300, 128, 128 );\n  var geometry = new SphereGeometry( 10, 128, 128 );\n  material.side = BackSide;\n  var sphere = new Mesh( geometry, material );\n  // sphere.position.set( 0, 0, 0 );\n  // sphere.rotation.y = 0.1;\n  // sphere.rotation.x = -0.4;\n  // sphere.rotation.y = Math.PI/1.4;\n  sphere.rotation.y = 2.2;\n  sphere.rotation.x = -0.2;\n  // sphere.rotation.x = -Math.PI/1.2;\n  sphere.side = BackSide;\n  sphere.name = 'panoramaSphereGeometry';\n  scene.add( sphere );\n}\n","import {\n  WebGLRenderer,\n  PerspectiveCamera,\n  Vector3,\n  Scene,\n  AmbientLight,\n  Clock,\n  Color,\n  LoadingManager,\n  Mesh,\n  Vector2,\n  MirroredRepeatWrapping\n} from 'three';\n\n// LoadingManager\n\n// import * as FBXLoader from 'three-fbxloader-offical';\nimport { Interaction } from 'three.interaction';\nimport OrbitControls from 'orbit-controls-es6';\n\nimport { debugHelper } from '../../utils/debugHelper';\n\nimport { actionsWrapper } from '../layoutButtons';\nimport { removeModel } from './removeModel';\nimport { controlsSettings } from './controlsSettings';\n\nimport {\n  textureSampleLoadingManager,\n  textureFbxLoadingManager,\n  changeModelTexture\n} from './textureLoadingManager';\n\nimport {\n  textureBackgroundScene,\n  textureBackgroundSceneAlt,\n  headTexture,\n  headTextureAlt,\n  headTextureGreenHair,\n  headTextureBlueHair,\n  headTextureRedHair\n} from '../textures';\n\nimport {\n  addModelMain,\n  addModelHorns,\n  addModelGlasses,\n  addModelChain,\n  addModelHat,\n  addModelMainDemon,\n  addModelMainVampire,\n  addModelMainGreen,\n  addModelMainHat,\n  addModelMainAnarchy,\n  addModelTowel,\n  addModelFangs,\n} from './loaderModels';\n\nimport { panoramaSphereGeometry } from './panoramaSphereGeometry';\nimport { cubeGeometry } from './cubeGeometry';\nimport { planeGeometry } from './planeGeometry';\n\nimport { namespace } from './namespace';\n\nimport { videoFrame } from '../videoFrame';\n\nimport { onPositionChange } from './onPositionChange'\n\nimport styles from './styles.scss';\n\nconst assetsPath = process.env.ASSETS_PATCH;\n\n\nexport function baseObj() {\n\n  // const root = document.body;\n  const root = document.querySelector('#app');\n  const innerWidth = window.innerWidth;\n  const innerHeight = window.innerHeight;\n\n\n  root.classList.add(styles.root);\n\n\n  // const headerSq = document.querySelector('#header');\n  // headerSq.classList.add('hidden-header');\n  // headerSq.hidden = false;\n\n\n\n  // Actions Btn's\n  const topLeftBtn = actionsWrapper.actionTopLeftBtn();\n  const topRightBtn = actionsWrapper.actionTopRightBtn();\n  const bottomLeftBtn = actionsWrapper.actionBottomLeftBtn();\n  const bottomRightBtn = actionsWrapper.actionBottomRightBtn();\n  const anarchyBtn = actionsWrapper.actionAnarchyBtn();\n  const logoContainer = actionsWrapper.logoBtn();\n  // const centerBtn = actionsWrapper.actionCenterBtn();\n  //\n\n\n  // renderer\n  const renderer = new WebGLRenderer({\n    antialias: true,\n    alpha: true\n  });\n  renderer.setSize(innerWidth, innerHeight);\n  // renderer.setSize(window.innerWidth, window.innerHeight);\n\n  // appendChild\n  root.appendChild(renderer.domElement);\n\n  // Camera\n  const camera = new PerspectiveCamera(3, window.innerWidth / window.innerHeight, 0.4, 1000);\n  // camera.position.set(-10, -20, 120);\n  // camera.position.x = 2;\n\t// camera.position.y = -60;\n\t// camera.position.z = 100;\n\n  camera.position.x = 2;\n  camera.position.y = -60;\n  camera.position.z = 100;\n\n  // camera.up.set(0, 1, 0);\n  // camera.lookAt(new Vector3(0, 0, 0));\n\n  // Scene\n  // scene and lights\n  const scene = new Scene();\n\n  scene.sceneType = 'default';\n  scene.anarchyBtnCount = 0;\n  scene.actionCount = 0;\n  scene.dataView = '';\n\n\n\n  // onWindowResize\n  window.addEventListener( 'resize', onWindowResize, false );\n  function onWindowResize(){\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize( window.innerWidth, window.innerHeight );\n  }\n  // scene.visibleHatModel = false;\n  // scene.background = new Color(0xf1f1f1);\n  // const sceneTexture = textureSampleLoadingManager(textureBackgroundScene);\n  // sceneTexture.minFilter = MirroredRepeatWrapping;\n  // console.log('scene___________________sceneTexture____', sceneTexture);\n  // sceneTexture.premultiplyAlpha = true;\n  // sceneTexture.wrapS = RepeatWrapping;\n  // sceneTexture.wrapT = RepeatWrapping;\n  // sceneTexture.repeat.set( 4, 4 );\n  // sceneTexture.flipY = true;\n  // sceneTexture.center = new Vector2( 0, 10 );\n  // sceneTexture.offset = new Vector2( 0.1, 0.1 );\n  // sceneTexture.mapping = 100;\n  // scene.background = sceneTexture;\n  // console.log('scene_______________________', scene);\n\n  // DebuG\n  // debugHelper(scene);\n  // End Debug\n\n  scene.add(new AmbientLight());\n  // scene.MeshLambertMaterial()\n  // scene.add(new AmbientLight(0x8FBCD4));\n\n  // planeGeometry(scene);\n\n\n  // OrbitControls\n  // https://github.com/mrdoob/three.js/blob/bcd4bec92609ce8af76a590b0f281ecf71019c2b/examples/js/controls/OrbitControls.js\n  const controls = new OrbitControls(camera, renderer.domElement);\n  // controls.addEventListener( 'change', render );\n  // controls.target.set(0, 0, 1000)\n  controlsSettings(controls);\n  // End controls\n\n\n  // Interaction\n  const interaction = new Interaction(renderer, scene, camera);\n\n  // MeshPhongMaterial\n  panoramaSphereGeometry(scene);\n\n  // addModelHat(scene);\n  // addModelChain(scene);\n  // addModelHat(scene);\n  // addModelHorns(scene);\n  // Loading Main model (Head)\n  // addModelMain(scene);\n  addModelMain(scene);\n  addModelChain(scene);\n  addModelHorns(scene);\n  addModelFangs(scene);\n  // addModelTowel(scene);\n  // addModelHat(scene);\n  // addModelGlasses(scene);\n\n  //\n  // const mainmodel = scene.getObjectByName(namespace.main);\n  // console.log('mainmodel____________', mainmodel);\n\n  // mainmodel.addEventListener(\"click\", function(e) {\n  //  console.log('mainmodel________addEventListener____', mainmodel);\n  // });\n  setTimeout( function() {\n    addModelMainDemon(scene);\n  }, 2000 );\n\n  // document.getElementById(\"demo1\").addEventListener(\"DOMSubtreeModified\", function() {\n  //  document.getElementById(\"demo2\").innerHTML = \"demo1 Changed!\"\n  // });\n  // Add the event listener\n  function backDefaultScene() {\n    if (scene.sceneType == 'anarchy') {\n      scene.anarchyBtnCount = 0;\n      // changeModelTexture(scene, 'panoramaSphereGeometry', textureBackgroundScene);\n      //\n      scene.sceneType = 'default';\n      const el = document.getElementById('videoFrame');\n      el.remove();\n    }\n  }\n\n  // External click / Actions\n  // External object - topLeftBtn\n  // topLeftBtn.addEventListener(\"mouseenter\", function(e) {\n  //  const hoverView = scene.dataView === 'topLeft';\n  //  if (!hoverView) {\n  //    backDefaultScene();\n  //    addModelMainVampire(scene);\n  //    scene.actionCount = 1;\n  //    scene.dataView = 'topLeft';\n  //  }\n  // });\n\n  topLeftBtn.addEventListener(\"click\", function(e) {\n    window.location = \"https://www.liltracy.com/tour\";\n  });\n\n  // topLeftBtn.addEventListener(\"mouseleave\", function(e) {\n  //  topLeftBtn.setAttribute('data-view',false)\n  //  console.log('Kkkkkkkkkkk______2__', e);\n  // });\n\n  // External click - load model horns\n  // let topRightBtnCount = 0;\n  // topRightBtn.addEventListener(\"mouseenter\", function(e) {\n  //  const hoverView = scene.dataView === 'topRight';\n  //  if (!hoverView) {\n  //    backDefaultScene();\n  //    addModelMainHat(scene);\n  //    scene.actionCount = 2;\n  //    scene.dataView = 'topRight';\n  //  }\n  // });\n\n  topRightBtn.addEventListener(\"click\", function(e) {\n    window.location = \"https://www.liltracy.com/shop\";\n  });\n\n  // External click - load model Glasses\n  // bottomLeftBtn.addEventListener(\"mouseenter\", function(e) {\n  //  const hoverView = scene.dataView === 'bottomLeft';\n  //  if (!hoverView) {\n  //    backDefaultScene();\n  //    addModelMainGreen(scene);\n  //    scene.actionCount = 3;\n  //    scene.dataView = 'bottomLeft';\n  //  }\n  // });\n\n  bottomLeftBtn.addEventListener(\"click\", function(e) {\n    window.location = \"https://www.liltracy.com/work\";\n  });\n\n  // External click - load model Chain_1\n  // bottomRightBtn.addEventListener(\"mouseenter\", function(e) {\n  //  const hoverView = scene.dataView === 'bottomRight';\n  //  if (!hoverView) {\n  //    backDefaultScene();\n  //    addModelMainDemon(scene);\n  //    scene.actionCount = 0;\n  //    scene.dataView = 'bottomRight';\n  //  }\n  // });\n\n  bottomRightBtn.addEventListener(\"click\", function(e) {\n    window.location = \"https://www.liltracy.com/video\";\n  });\n  // End External click\n\n  // External click - load model Chain_1\n  anarchyBtn.addEventListener(\"click\", function(e) {\n    // PanoramaObj\n    if (scene.anarchyBtnCount === 0) {\n      // changeModelTexture(scene, 'panoramaSphereGeometry', textureBackgroundSceneAlt);\n      // addModelMainAnarchy(scene);\n      scene.sceneType = 'anarchy';\n      videoFrame();\n    }\n    if (scene.anarchyBtnCount === 1) {\n      // addModelMainDemon(scene);\n      // changeModelTexture(scene, 'panoramaSphereGeometry', textureBackgroundScene);\n      scene.sceneType = 'default';\n      const el = document.getElementById('videoFrame');\n      el.remove();\n    }\n    if (scene.anarchyBtnCount === 0) {\n      scene.anarchyBtnCount = scene.anarchyBtnCount + 1;\n    } else {\n      scene.anarchyBtnCount = 0;\n    }\n  });\n\n  anarchyBtn.addEventListener(\"mouseleave\", function(e) {\n    backDefaultScene();\n  });\n\n  // const closeVideoFrame = document.getElementById('videoFrame');\n  // closeVideoFrame.addEventListener(\"click\", function(e) {\n  //  scene.sceneType = 'default';\n  //  const el = document.getElementById('videoFrame');\n  //  el.remove();\n  // });\n  // End External click\n\n\n  // const cubemodel = scene.getObjectByName(namespace.mainAction);\n  // centerBtn\n  // let actionCount = 0;\n  // cubemodel.on('click', function(ev) {\n  // centerBtn.addEventListener(\"click\", function(e) {\n  function cubeActions() {\n    backDefaultScene();\n    scene.dataView = '';\n    if (scene.actionCount === 0) {\n      addModelMainVampire(scene);\n    }\n    if (scene.actionCount === 1) {\n      addModelMainHat(scene);\n    }\n    if (scene.actionCount === 2) {\n      addModelMainGreen(scene);\n    }\n    if (scene.actionCount === 3) {\n      addModelMainDemon(scene);\n    }\n    if (scene.actionCount >= 0 && scene.actionCount < 3) {\n      scene.actionCount = scene.actionCount + 1;\n    } else if(scene.actionCount >= 3) {\n      scene.actionCount = 0;\n    } else {\n      scene.actionCount = 0;\n    }\n  }\n\n  // const canvasBtn = document.querySelector('canvas');\n  // canvasBtn.classList.add(styles.canvasBtn);\n  // canvasBtn.style.backgroundImage = 'url(' + textureBackgroundScene + ')';\n\n  // if (document.body.clientWidth > 768) {\n  //  canvasBtn.addEventListener(\"dblclick\", function(e) {\n  //    cubeActions();\n  //  });\n  // } else {\n  //  canvasBtn.addEventListener(\"click\", function(e) {\n  //    cubeActions();\n  //  });\n  // }\n\n  // cursor only\n  // cubeGeometry(scene);\n  // const cubemodel = scene.getObjectByName(namespace.mainAction);\n  // console.log('cubemodel_______________11____', cubemodel);\n  // cubemodel.on('dblclick', function(e) {\n  //  // cubeActions();\n  //  return null;\n  // });\n\n  // document.addEventListener('mousewheel', function() {\n  //  // document.getElementById('showScroll').innerHTML = pageYOffset + 'px';\n  //  console.log('scroll________________');\n  // });\n\n\n  // header\n  // const canvasBtn = document.querySelector('canvas');\n  // async function asyncCallHeader() {\n  //  const result = await document.querySelector('#header');\n  //  if (result) {\n  //    result.classList.add(styles.headerHidden);\n  //  }\n  //  // retuen\n  //  // result.visible = true;\n  // }\n  // asyncCallHeader();\n\n  // var currentPosition = 0;\n  // function onPositionChangeBg(e) {\n  //  // event.target.object.rotation._y\n  //  onPositionChange(e, canvasBtn);\n  // }\n  // controls.addEventListener('change', onPositionChangeBg);\n\n  // onWheel();\n\n  // animation rendering\n  const render = function () {\n    // requestAnimationFrame(render);\n    setTimeout( function() {\n      // console.log('scroll________________', scene);\n      requestAnimationFrame(render);\n      controls.update();\n    }, 1000 / 30 );\n    // requestAnimationFrame(render);\n    // controls.update();\n    renderer.render(scene, camera);\n  };\n\n  render();\n}\n","// controlsSettings\n// https://github.com/mrdoob/three.js/blob/bcd4bec92609ce8af76a590b0f281ecf71019c2b/examples/js/controls/OrbitControls.js\nimport { MOUSE, TOUCH, Vector3 } from 'three';\n\nexport const controlsSettings = (controls) => {\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = .66;\n\n  // console.log('controls__________________________', controls);\n\n  // controls.enablePan = false;\n  // controls.target = new Vector3(.5, .5, .5);\n  // controls.enableZoom = true;      //Zooming\n  // controls.autoRotate = true;       // enable rotation\n\n  // \"target\" sets the location of focus, where the object orbits around\n  // controls.target = new Vector3(0,0.5,0.5);\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // controls.minPolarAngle = controls.maxPolarAngle = 60*(Math.PI/120);\n  // controls.minPolarAngle = -0.1; // radians\n  // controls.maxPolarAngle = 0.1; // radians\n  // controls.minPolarAngle = .4; // radians\n  // controls.maxPolarAngle = 10; // radians\n  // controls.minPolarAngle = -1.4; // radians\n  // controls.maxPolarAngle = 3.4; // radians\n  // controls.minPolarAngle = 0; // radians\n  // controls.maxPolarAngle = 4; // radians\n  // vertical angle control\n  //controls.minPolarAngle = 1.5;\n  //controls.maxPolarAngle = 2;\n\n  controls.minPolarAngle = 0.6;\n  controls.maxPolarAngle = 2.4;\n\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  controls.minAzimuthAngle = -1.1; // radians\n  controls.maxAzimuthAngle = 1.1; // radians\n  //  horizontally angle control\n  // controls.minAzimuthAngle = -Math.PI / 4;\n  // controls.maxAzimuthAngle = Math.PI / 4;\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // controls.minDistance = 92;\n  // controls.maxDistance = 108;\n  controls.minDistance = 90;\n  controls.maxDistance = 98;\n\n  // OrthographicCamera only\n  // controls.minZoom = -2;\n  // controls.maxZoom = 2;\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  /// controls.enableDamping = false;\n  /// controls.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // controls.enableZoom = true;\n  // controls.zoomSpeed = 1.0;\n\n  // Set to false to disable use of the keys\n  // controls.keys = {\n  //  LEFT: 37, //left arrow\n  //  UP: 38, // up arrow\n  //  RIGHT: 39, // right arrow\n  //  BOTTOM: 40 // down arrow\n  // }\n  // controls.touches = {\n  //\tONE: THREE.TOUCH.ROTATE,\n  //\tTWO: THREE.TOUCH.DOLLY_PAN\n  // }\n\n  controls.enableKeys = true;\n  // The four arrow keys\n  controls.keys = { LEFT: 0, UP: 0, RIGHT: 0, BOTTOM: 0 };\n\n  controls.enablePan = false;\n\n  // controls.mouseButtons = {\n  //\tLEFT: MOUSE.ROTATE,\n  //\tMIDDLE: MOUSE.DOLLY,\n  //\tRIGHT: MOUSE.PAN\n  // }\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // controls.minZoom = 100;\n  // controls.maxZoom = 100;\n\n  // controls.enableDamping = true;\n  // controls.dampingFactor = 0.25;\n  // controls.enableZoom = true;\n\n  // controls.addEventListener(\"change\", () => {\n  //  // if (this.renderer) this.renderer.render(this.scene, camera);\n  //  console.log('change_______');\n  // });\n\n  // console.log('change______MOUSE_', MOUSE);\n  // TOUCH\n  // console.log('change______TOUCH_', TOUCH);\n\n  // controls.mouseButtons = {LEFT: MOUSE.LEFT, MIDDLE: MOUSE.MIDDLE, RIGHT: MOUSE.RIGHT};\n\n  // controls.touches = {\n  //\tONE: TOUCH.ROTATE,\n  //\tTWO: TOUCH.DOLLY_PAN\n  // }\n\n  // controls.addEventListener('change', onPositionChange);\n\n  // position0: Vector3 {x: 2, y: -60, z: 100}\n\n  controls.update();\n}\n","// model.position\nexport const modelPositionY = -1.2;\n","import styles from './styles.scss';\n\nimport { videoAnarchyFrame } from '../textures';\n\nexport const videoFrame = () => {\n  // const manager = 'test';\n  const root = document.querySelector('#app');\n  const container = document.createElement(\"div\");\n  container.id = \"videoFrame\";\n  container.classList.add(styles.root);\n  // const btnContent = document.createTextNode(\"Center\");\n  // btn.appendChild(btnContent);\n  const video = document.createElement(\"video\");\n  video.classList.add(styles.video);\n  video.src = videoAnarchyFrame;\n  video.loop = true;\n  video.controls = false;\n  video.autoplay = true;\n  container.appendChild(video);\n\n  root.appendChild(container);\n  return container;\n  // return manager;\n};\n// textureBackgroundSceneAlt\n","import { baseObj } from './containers/baseObj';\n\n// import styles from './styles.scss';\n\n// const app = document.getElementById('app');\n// app.insertAdjacentHTML(\n//  'beforebegin',\n//  '<p class=\"' + styles.headline + '\">Hello App</p>',\n// );\n\n// sampleFbxLoader\nbaseObj();\n"],"sourceRoot":""}